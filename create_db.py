import sqlite3
import json

# Connect to SQLite database (or change to your specific database)
conn = sqlite3.connect('premier_league.db')
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS fixtures (
        fixture_id INTEGER PRIMARY KEY,
        referee TEXT,
        timezone TEXT,
        date TEXT,
        timestamp INTEGER,
        first_period INTEGER,
        second_period INTEGER,
        venue_id INTEGER,
        venue_name TEXT,
        venue_city TEXT,
        status_long TEXT,
        status_short TEXT,
        status_elapsed INTEGER,
        league_id INTEGER,
        league_name TEXT,
        league_country TEXT,
        league_logo TEXT,
        league_flag TEXT,
        league_season INTEGER,
        league_round TEXT,
        home_team_id INTEGER,
        home_team_name TEXT,
        home_team_logo TEXT,
        away_team_id INTEGER,
        away_team_name TEXT,
        away_team_logo TEXT,
        home_team_winner BOOLEAN,
        away_team_winner BOOLEAN,
        goals_home INTEGER,
        goals_away INTEGER,
        halftime_home INTEGER,
        halftime_away INTEGER,
        fulltime_home INTEGER,
        fulltime_away INTEGER,
        extratime_home INTEGER,
        extratime_away INTEGER,
        penalty_home INTEGER,
        penalty_away INTEGER
    )
    ''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS player_stats (
        id INTEGER PRIMARY KEY,
        name TEXT,
        firstname TEXT,
        lastname TEXT,
        age INTEGER,
        birth_date TEXT,
        birth_place TEXT,
        birth_country TEXT,
        nationality TEXT,
        height TEXT,
        weight TEXT,
        injured BOOLEAN,
        photo TEXT,
        team_id INTEGER,
        team_name TEXT,
        team_logo TEXT,
        league_id INTEGER,
        league_name TEXT,
        league_country TEXT,
        league_logo TEXT,
        league_flag TEXT,
        season INTEGER,
        games_appearences INTEGER,
        games_lineups INTEGER,
        games_minutes INTEGER,
        games_number INTEGER,
        games_position TEXT,
        games_rating REAL,
        games_captain BOOLEAN,
        substitutes_in INTEGER,
        substitutes_out INTEGER,
        substitutes_bench INTEGER,
        shots_total INTEGER,
        shots_on INTEGER,
        goals_total INTEGER,
        goals_conceded INTEGER,
        goals_assists INTEGER,
        goals_saves INTEGER,
        passes_total INTEGER,
        passes_key INTEGER,
        passes_accuracy INTEGER,
        tackles_total INTEGER,
        tackles_blocks INTEGER,
        tackles_interceptions INTEGER,
        duels_total INTEGER,
        duels_won INTEGER,
        dribbles_attempts INTEGER,
        dribbles_success INTEGER,
        dribbles_past INTEGER,
        fouls_drawn INTEGER,
        fouls_committed INTEGER,
        cards_yellow INTEGER,
        cards_yellowred INTEGER,
        cards_red INTEGER,
        penalty_won INTEGER,
        penalty_commited INTEGER,
        penalty_scored INTEGER,
        penalty_missed INTEGER,
        penalty_saved INTEGER
    )
    ''')

cursor.execute('''
        CREATE TABLE IF NOT EXISTS player_match_statistics (
            fixture_id INTEGER,
            team_id INTEGER,
            player_id INTEGER,
            player_name TEXT,
            minutes INTEGER,
            number INTEGER,
            position TEXT,
            rating REAL,
            captain BOOLEAN,
            substitute BOOLEAN,
            shots_total INTEGER,
            shots_on INTEGER,
            goals_total INTEGER,
            goals_conceded INTEGER,
            assists INTEGER,
            saves INTEGER,
            passes_total INTEGER,
            passes_key INTEGER,
            passes_accuracy TEXT,
            tackles_total INTEGER,
            tackles_blocks INTEGER,
            tackles_interceptions INTEGER,
            duels_total INTEGER,
            duels_won INTEGER,
            dribbles_attempts INTEGER,
            dribbles_success INTEGER,
            fouls_drawn INTEGER,
            fouls_committed INTEGER,
            cards_yellow INTEGER,
            cards_red INTEGER,
            penalty_won INTEGER,
            penalty_committed INTEGER,
            penalty_scored INTEGER,
            penalty_missed INTEGER,
            penalty_saved INTEGER,
            FOREIGN KEY(fixture_id) REFERENCES fixtures(fixture_id)
        )
    ''')

cursor.execute('''
    CREATE TABLE IF NOT EXISTS fixture_statistics (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        fixture_id INTEGER,
        team_id INTEGER,
        team_name TEXT,
        team_logo TEXT,
        shots_on_goal INTEGER,
        shots_off_goal INTEGER,
        total_shots INTEGER,
        blocked_shots INTEGER,
        shots_inside_box INTEGER,
        shots_outside_box INTEGER,
        fouls INTEGER,
        corner_kicks INTEGER,
        offsides INTEGER,
        ball_possession TEXT,
        yellow_cards INTEGER,
        red_cards INTEGER,
        goalkeeper_saves INTEGER,
        total_passes INTEGER,
        passes_accurate INTEGER,
        passes_percentage TEXT,
        FOREIGN KEY (fixture_id) REFERENCES fixtures (fixture_id)
    )
    ''')

conn.commit()
conn.close()